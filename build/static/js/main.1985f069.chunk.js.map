{"version":3,"sources":["pages/Users/List/UsersList.component.js","components/Layout/Layout.component.js","useFetch.js","pages/Users/List/UsersList.container.js","App.js","serviceWorker.js","index.js"],"names":["Item","Descriptions","columns","key","dataIndex","title","sorter","list","loading","handleTableChange","handleSubmitFilters","Fragment","style","marginBottom","onSubmit","rowKey","dataSource","onChange","pagination","defaultCurrent","defaultPageSize","total","showSizeChanger","pageSizeOptions","expandedRowRender","RowExpander","u","column","label","span","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","name","catchPhrase","bs","tagColors","RandomCompanyBadge","split","map","el","i","color","Math","floor","random","length","defaultValues","username","email","FormComponent","useForm","control","handleSubmit","reset","justify","type","gutter","xs","lg","placeholder","as","Input","allowClear","size","minWidth","onClick","disabled","e","Header","Layout","Content","Footer","menu","text","children","history","useHistory","currentKey","location","find","findKeyBasedOnPath","pathname","className","theme","mode","lineHeight","defaultSelectedKeys","selectedKeys","push","padding","sortMapper","ascend","descend","useFetch","source","mappings","s","p","filters","React","useState","data","setData","setIsLoading","sortValues","order","_order","_sort","field","paginationValues","_page","current","_limit","pageSize","query","concat","params","k","join","toQueryString","useEffect","a","fetch","then","r","json","finally","fetchResponse","setFilters","setPagination","setSorter","f","App","path","component","UsersList","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1985f069.chunk.js","sourcesContent":["import React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { Table, Descriptions, Tag, Input, Button, Row, Col, Card } from 'antd';\nconst { Item } = Descriptions;\n\nconst columns = [\n  { key: 'id', dataIndex: 'id', title: 'ID' },\n  { key: 'name', dataIndex: 'name', title: 'Name', sorter: true },\n  { key: 'username', dataIndex: 'username', title: 'Username', sorter: true },\n  { key: 'email', dataIndex: 'email', title: 'Email', sorter: true },\n];\n\nexport default ({ list, loading, handleTableChange, handleSubmitFilters }) => {\n  return (\n    <React.Fragment>\n      <Card style={{ marginBottom: \"48px\" }}>\n        <FormComponent onSubmit={handleSubmitFilters} loading={loading} />\n      </Card>\n      <Card>\n        <Table\n          rowKey='id'\n          columns={columns}\n          dataSource={list}\n          onChange={handleTableChange}\n          pagination={{defaultCurrent: 1, defaultPageSize: 5, total: 10, showSizeChanger: true, pageSizeOptions: ['5', '10']}}\n          expandedRowRender={RowExpander}\n          loading={loading}\n        />\n      </Card>\n    </React.Fragment>\n  )\n}\n\nconst RowExpander = (u) => (\n  <Descriptions title=\"User details\" column={3}>\n    <Item label=\"Address\" span={3}>{`${u.address.street} ${u.address.suite} ${u.address.city} ${u.address.zipcode}`}</Item>\n    <Item label=\"Geo\">{`${u.address.geo.lat} / ${u.address.geo.lng}`}</Item>\n    <Item label=\"Phone\">{u.phone}</Item>\n    <Item label=\"Website\">{u.website}</Item>\n    <Item label=\"Company name\">{u.company.name}</Item>\n    <Item label=\"Company catch phrase\" span={2}>{u.company.catchPhrase}</Item>\n    <Item label=\"Company bs\">\n      <RandomCompanyBadge bs={u.company.bs}/>\n    </Item>\n  </Descriptions>\n);\n\nconst tagColors = ['geekblue', 'green', 'volcano', 'yellow'];\n\nconst RandomCompanyBadge = ({ bs }) => (\n  <div>\n    {bs.split(' ').map((el, i) => (\n      <Tag color={tagColors[Math.floor(Math.random() * tagColors.length)]} key={i}>\n        {el}\n      </Tag>\n    ))}\n  </div>\n);\n\n\nconst defaultValues = { username: '', email: '' };\n\nconst FormComponent = ({ onSubmit, loading }) => {\n  const { control, handleSubmit, reset } = useForm({ defaultValues });\n\n  const handleResetForm = (e) => {\n    onSubmit({}, e);\n    reset(defaultValues);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Row justify=\"space-between\" type=\"flex\" gutter={[0, 16]}>\n        <Col xs={24} lg={9}>\n          <Controller\n            name=\"username\"\n            placeholder=\"Username\"\n            as={Input}\n            control={control}\n            allowClear\n            size=\"large\"\n          />\n        </Col>\n        <Col xs={24} lg={9}>\n          <Controller\n            name=\"email\"\n            placeholder=\"Email\"\n            as={Input}\n            control={control}\n            allowClear\n            size=\"large\"\n          />\n        </Col>\n        <Col xs={24} lg={4} style={{ minWidth: '180px' }}>\n          <Row justify=\"end\" type=\"flex\" gutter={[16, 0]}>\n            <Col>\n              <Button size=\"large\" type=\"primary\" onClick={handleSubmit(onSubmit)} disabled={loading}>Search</Button>\n            </Col>\n            <Col>\n              <Button size=\"large\" type=\"secondary\" onClick={handleResetForm} disabled={loading}>Reset</Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </form>\n  )\n}","\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport { Layout, Menu } from 'antd';\nconst { Header, Content, Footer } = Layout;\n\nconst menu = [\n  { key: '/authors', text: 'Authors' },\n  { key: '/books', text: 'Books' },\n];\n\nconst findKeyBasedOnPath = (location) => menu.find(({ key }) => key === location)?.key || menu[0].key;\n\nexport default ({ children }) => {\n  const history = useHistory();\n  const currentKey = findKeyBasedOnPath(history.location.pathname);\n\n  const handleRouteChange = ({ key }) => { history.push(key); }\n\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          style={{ lineHeight: '64px' }}\n          defaultSelectedKeys={[currentKey]}\n          selectedKeys={[currentKey]}\n          onClick={handleRouteChange}\n        >\n          {menu.map(({ key, text }) => (\n            <Menu.Item key={key} className=\"e2e-menu-item\">{text}</Menu.Item>\n          ))}\n        </Menu>\n      </Header>\n      <Content>\n        <div style={{ padding: '48px' }} className=\"e2e-container\">\n          {children}\n        </div>\n      </Content>\n      <Footer>\n        Ant Design ©2018 Created by Ant UED\n      </Footer>\n    </Layout>\n  );\n}","import React from 'react';\nimport { map } from 'lodash';\n\nconst BASE_URL = 'https://jsonplaceholder.typicode.com/';\n\nconst sortMapper = { ascend: 'asc', descend: 'desc' } \n\nconst handleSortValues = (s) => !s.order ? {} : { _order: sortMapper[s.order], _sort: s.field };\nconst handlePaginationValues = (p) => ({ _page: p.current, _limit: p.pageSize });\nconst toQueryString = (params, mappings) => map(params, (p, k) => `${k}${mappings[k] || '='}${p}`).join('&');\n\nexport const useFetch = (source, { filters, pagination, sorter }, mappings) => {\n  const [data, setData] = React.useState(null);\n  const [loading, setIsLoading] = React.useState(false);\n\n  const sortValues = handleSortValues(sorter); \n  const paginationValues = handlePaginationValues(pagination);\n\n  const query = BASE_URL\n    .concat(source)\n    .concat(toQueryString({...filters, ...sortValues, ...paginationValues}, mappings));\n\n  React.useEffect(() => {\n    setIsLoading(true);\n\n    const fetchResponse = async () => fetch(query)\n      .then((r) => r.json())\n      .then((r) => { setData(r); })\n      .finally(() => { setIsLoading(false); });\n\n      fetchResponse();\n  }, [query]);\n\n  return { data, loading };\n};\n\nexport const LIMITS = { posts: 100, comments: 500, albums: 100, photos: 5000, todos: 200, users: 10 }","import React from 'react';\n\nimport UsersListPage from './UsersList.component';\nimport Layout from '../../../components/Layout';\n\nimport { useFetch } from '../../../useFetch';\n\nconst mappings = { username: '_like=', email: '_like='}\n\nexport default () => {\n  const [filters, setFilters] = React.useState({});\n  const [pagination, setPagination] = React.useState({ current: 1, pageSize: 5 });\n  const [sorter, setSorter] = React.useState({});\n  \n  const handleTableChange = (p, f, s) => {\n    setPagination(p);\n    setSorter(s);\n    setFilters(f);\n  }\n\n  const handleSubmitFilters = (data, e) => {\n    setFilters(data);\n  };\n\n  const { data = [], loading } = useFetch('users?', { filters, pagination, sorter}, mappings);\n  \n  return (\n    <Layout>\n      <UsersListPage\n        list={data}\n        loading={loading}\n        handleTableChange={handleTableChange}\n        handleSubmitFilters={handleSubmitFilters}\n      />\n    </Layout>\n  )\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport 'antd/dist/antd.css';\nimport UsersList from './pages/Users/List';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={UsersList} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}